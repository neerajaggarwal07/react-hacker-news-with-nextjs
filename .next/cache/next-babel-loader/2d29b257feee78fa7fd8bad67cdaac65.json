{"ast":null,"code":"var _jsxFileName = \"/Users/neeaggar/Official/learning/rnd/reactjs/react-hacker-news-with-nextjs/components/atoms/Row/Row.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport withStyles from '../../hoc/withStyles';\nimport StyledRow from './Row.style'; // An additonal prop 'fullBleed' is added.\n// This property ignores the offset of the row and spans across the space of the grid.\n\nconst Row = (_ref) => {\n  let {\n    className,\n    children,\n    tagName: CustomTag,\n    tabIndex\n  } = _ref,\n      otherprops = _objectWithoutProperties(_ref, [\"className\", \"children\", \"tagName\", \"tabIndex\"]);\n\n  return __jsx(CustomTag, _extends({\n    className: className,\n    tabIndex: tabIndex\n  }, otherprops, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), children);\n};\n\nRow.propTypes = {\n  children: PropTypes.shape([]).isRequired,\n  className: PropTypes.string.isRequired,\n  tagName: PropTypes.string,\n  tabIndex: PropTypes.number,\n  otherprops: PropTypes.shape({})\n};\nRow.defaultProps = {\n  tagName: 'div',\n  tabIndex: undefined,\n  otherprops: {}\n};\nexport default withStyles(Row, StyledRow);\nexport { Row as RowVanilla };","map":{"version":3,"sources":["/Users/neeaggar/Official/learning/rnd/reactjs/react-hacker-news-with-nextjs/components/atoms/Row/Row.js"],"names":["React","PropTypes","withStyles","StyledRow","Row","className","children","tagName","CustomTag","tabIndex","otherprops","propTypes","shape","isRequired","string","number","defaultProps","undefined","RowVanilla"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAGA;AACA;;AACA,MAAMC,GAAG,GAAG,UAA0E;AAAA,MAAzE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA,OAAO,EAAEC,SAAhC;AAA2CC,IAAAA;AAA3C,GAAyE;AAAA,MAAjBC,UAAiB;;AACpF,SACE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEL,SAAtB;AAAiC,IAAA,QAAQ,EAAEI;AAA3C,KAAyDC,UAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGJ,QADH,CADF;AAKD,CAND;;AAQAF,GAAG,CAACO,SAAJ,GAAgB;AACZL,EAAAA,QAAQ,EAAEL,SAAS,CAACW,KAAV,CAAgB,EAAhB,EAAoBC,UADlB;AAEdR,EAAAA,SAAS,EAAEJ,SAAS,CAACa,MAAV,CAAiBD,UAFd;AAGdN,EAAAA,OAAO,EAAEN,SAAS,CAACa,MAHL;AAIdL,EAAAA,QAAQ,EAAER,SAAS,CAACc,MAJN;AAKdL,EAAAA,UAAU,EAAET,SAAS,CAACW,KAAV,CAAgB,EAAhB;AALE,CAAhB;AAQAR,GAAG,CAACY,YAAJ,GAAmB;AACjBT,EAAAA,OAAO,EAAE,KADQ;AAEjBE,EAAAA,QAAQ,EAAEQ,SAFO;AAGjBP,EAAAA,UAAU,EAAE;AAHK,CAAnB;AAOA,eAAeR,UAAU,CAACE,GAAD,EAAMD,SAAN,CAAzB;AACA,SAASC,GAAG,IAAIc,UAAhB","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport withStyles from '../../hoc/withStyles';\nimport StyledRow from './Row.style';\n\n\n// An additonal prop 'fullBleed' is added.\n// This property ignores the offset of the row and spans across the space of the grid.\nconst Row = ({ className, children, tagName: CustomTag, tabIndex, ...otherprops }) => {\n  return (\n    <CustomTag className={className} tabIndex={tabIndex} {...otherprops}>\n      {children}\n    </CustomTag>\n  );\n};\n\nRow.propTypes = {\n    children: PropTypes.shape([]).isRequired,\n  className: PropTypes.string.isRequired,\n  tagName: PropTypes.string,\n  tabIndex: PropTypes.number,\n  otherprops: PropTypes.shape({}),\n};\n\nRow.defaultProps = {\n  tagName: 'div',\n  tabIndex: undefined,\n  otherprops: {},\n\n};\n\nexport default withStyles(Row, StyledRow);\nexport { Row as RowVanilla };\n"]},"metadata":{},"sourceType":"module"}