{"ast":null,"code":"var _jsxFileName = \"/Users/neeaggar/Official/learning/rnd/reactjs/react-hacker-news-with-nextjs/components/atoms/Col/Col.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// Basic file for column in the grid structure\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport styles from './Col.style';\nimport withStyles from '../../hoc/withStyles'; // Passing on the colConfig to the style File and also the flag to add inline-block to the column\n\nconst Col = (_ref) => {\n  let {\n    children,\n    className,\n    tagName: CustomTag\n  } = _ref,\n      otherProps = _objectWithoutProperties(_ref, [\"children\", \"className\", \"tagName\"]);\n\n  return __jsx(CustomTag, _extends({\n    className: className\n  }, otherProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), children);\n};\n\nCol.propTypes = {\n  children: PropTypes.shape({}).isRequired,\n  className: PropTypes.string.isRequired,\n  tagName: PropTypes.string\n};\nCol.defaultProps = {\n  tagName: 'div'\n};\nexport default withStyles(Col, styles);","map":{"version":3,"sources":["/Users/neeaggar/Official/learning/rnd/reactjs/react-hacker-news-with-nextjs/components/atoms/Col/Col.js"],"names":["React","PropTypes","styles","withStyles","Col","children","className","tagName","CustomTag","otherProps","propTypes","shape","isRequired","string","defaultProps"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB,C,CAEA;;AACA,MAAMC,GAAG,GAAG,UAAgE;AAAA,MAA/D;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,OAAO,EAAEC;AAAhC,GAA+D;AAAA,MAAjBC,UAAiB;;AAC1E,SACE,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEH;AAAtB,KAAqCG,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGJ,QADH,CADF;AAKD,CAND;;AAQAD,GAAG,CAACM,SAAJ,GAAgB;AACdL,EAAAA,QAAQ,EAAEJ,SAAS,CAACU,KAAV,CAAgB,EAAhB,EAAoBC,UADhB;AAEdN,EAAAA,SAAS,EAAEL,SAAS,CAACY,MAAV,CAAiBD,UAFd;AAKdL,EAAAA,OAAO,EAAEN,SAAS,CAACY;AALL,CAAhB;AASAT,GAAG,CAACU,YAAJ,GAAmB;AAGjBP,EAAAA,OAAO,EAAE;AAHQ,CAAnB;AAQA,eAAeJ,UAAU,CAACC,GAAD,EAAMF,MAAN,CAAzB","sourcesContent":["// Basic file for column in the grid structure\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport styles from './Col.style';\nimport withStyles from '../../hoc/withStyles';\n\n// Passing on the colConfig to the style File and also the flag to add inline-block to the column\nconst Col = ({ children, className, tagName: CustomTag, ...otherProps }) => {\n  return (\n    <CustomTag className={className} {...otherProps}>\n      {children}\n    </CustomTag>\n  );\n};\n\nCol.propTypes = {\n  children: PropTypes.shape({}).isRequired,\n  className: PropTypes.string.isRequired,\n \n \n  tagName: PropTypes.string,\n\n};\n\nCol.defaultProps = {\n  \n  \n  tagName: 'div',\n \n  \n};\n\nexport default withStyles(Col, styles);\n"]},"metadata":{},"sourceType":"module"}