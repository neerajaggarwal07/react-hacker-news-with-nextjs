{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/neeaggar/Official/learning/rnd/reactjs/react-hacker-news-with-nextjs/components/atoms/Anchor/Anchor.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport withStyles from '../../hoc/withStyles';\nimport styles from './Anchor.style';\n\nvar Anchor = function Anchor(props) {\n  var children = props.children,\n      to = props.to,\n      className = props.className,\n      handleLinkClick = props.handleLinkClick,\n      title = props.title,\n      target = props.target,\n      url = props.url,\n      text = props.text,\n      other = _objectWithoutProperties(props, [\"children\", \"to\", \"className\", \"handleLinkClick\", \"title\", \"target\", \"url\", \"text\"]);\n\n  return __jsx(\"a\", _extends({\n    href: url,\n    className: className,\n    onClick: handleLinkClick,\n    title: title,\n    target: target\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), children);\n};\n\nAnchor.propTypes = {\n  children: PropTypes.string.isRequired,\n  to: PropTypes.string,\n  className: PropTypes.string.isRequired,\n  handleLinkClick: PropTypes.func,\n  title: PropTypes.string,\n  target: PropTypes.string,\n  url: PropTypes.string,\n  text: PropTypes.string\n};\nAnchor.defaultProps = {\n  handleLinkClick: function handleLinkClick() {},\n  title: '',\n  target: '',\n  url: '',\n  text: '',\n  to: ''\n};\nexport default withStyles(Anchor, styles);","map":{"version":3,"sources":["/Users/neeaggar/Official/learning/rnd/reactjs/react-hacker-news-with-nextjs/components/atoms/Anchor/Anchor.js"],"names":["React","PropTypes","withStyles","styles","Anchor","props","children","to","className","handleLinkClick","title","target","url","text","other","propTypes","string","isRequired","func","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AAAA,MAEpBC,QAFoB,GAWlBD,KAXkB,CAEpBC,QAFoB;AAAA,MAGpBC,EAHoB,GAWlBF,KAXkB,CAGpBE,EAHoB;AAAA,MAIpBC,SAJoB,GAWlBH,KAXkB,CAIpBG,SAJoB;AAAA,MAKpBC,eALoB,GAWlBJ,KAXkB,CAKpBI,eALoB;AAAA,MAMpBC,KANoB,GAWlBL,KAXkB,CAMpBK,KANoB;AAAA,MAOpBC,MAPoB,GAWlBN,KAXkB,CAOpBM,MAPoB;AAAA,MAQpBC,GARoB,GAWlBP,KAXkB,CAQpBO,GARoB;AAAA,MASpBC,IAToB,GAWlBR,KAXkB,CASpBQ,IAToB;AAAA,MAUjBC,KAViB,4BAWlBT,KAXkB;;AAatB,SACE;AACA,IAAA,IAAI,EAAEO,GADN;AAEA,IAAA,SAAS,EAAEJ,SAFX;AAGA,IAAA,OAAO,EAAEC,eAHT;AAIA,IAAA,KAAK,EAAEC,KAJP;AAKA,IAAA,MAAM,EAAEC;AALR,KAMIG,KANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQCR,QARD,CADF;AAYD,CAzBD;;AA6BAF,MAAM,CAACW,SAAP,GAAmB;AACfT,EAAAA,QAAQ,EAAEL,SAAS,CAACe,MAAV,CAAiBC,UADZ;AAEfV,EAAAA,EAAE,EAAEN,SAAS,CAACe,MAFC;AAGfR,EAAAA,SAAS,EAAEP,SAAS,CAACe,MAAV,CAAiBC,UAHb;AAIfR,EAAAA,eAAe,EAAER,SAAS,CAACiB,IAJZ;AAKfR,EAAAA,KAAK,EAAET,SAAS,CAACe,MALF;AAMfL,EAAAA,MAAM,EAAEV,SAAS,CAACe,MANH;AAOfJ,EAAAA,GAAG,EAAEX,SAAS,CAACe,MAPA;AAQfH,EAAAA,IAAI,EAAEZ,SAAS,CAACe;AARD,CAAnB;AAWEZ,MAAM,CAACe,YAAP,GAAsB;AACpBV,EAAAA,eAAe,EAAE,2BAAM,CAAE,CADL;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,MAAM,EAAE,EAHY;AAIpBC,EAAAA,GAAG,EAAE,EAJe;AAKpBC,EAAAA,IAAI,EAAE,EALc;AAMpBN,EAAAA,EAAE,EAAC;AANiB,CAAtB;AAUF,eAAeL,UAAU,CAACE,MAAD,EAASD,MAAT,CAAzB","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport withStyles from '../../hoc/withStyles';\nimport styles from './Anchor.style';\n\nconst Anchor = props => {\n  const {\n    children,\n    to,\n    className,\n    handleLinkClick,\n    title,\n    target,\n    url,\n    text,\n    ...other\n  } = props;\n\n  return (\n    <a\n    href={url}\n    className={className}\n    onClick={handleLinkClick}\n    title={title}\n    target={target}\n    {...other}\n  >\n    {children}\n  </a>\n  );\n};\n\n\n\nAnchor.propTypes = {\n    children: PropTypes.string.isRequired,\n    to: PropTypes.string,\n    className: PropTypes.string.isRequired,\n    handleLinkClick: PropTypes.func,\n    title: PropTypes.string,\n    target: PropTypes.string,\n    url: PropTypes.string,\n    text: PropTypes.string,\n  };\n  \n  Anchor.defaultProps = {\n    handleLinkClick: () => {},\n    title: '',\n    target: '',\n    url: '',\n    text: '',\n    to:''\n  };\n\n\nexport default withStyles(Anchor, styles);\n"]},"metadata":{},"sourceType":"module"}